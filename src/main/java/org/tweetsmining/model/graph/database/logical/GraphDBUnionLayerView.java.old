/*
 * Copyright (C) 2015 vasistas
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.tweetsmining.model.graph.database.logical;

import java.util.Collection;
import java.util.Set;
import java.util.TreeSet;
import org.tweetsmining.model.graph.database.Entity;
import org.tweetsmining.model.graph.database.Relation;

/**
 *
 * @author vasistas
 */
public class GraphDBUnionLayerView extends GraphDBRelationExtractorLayerView  {
    
    /**
     * Suppose that all the layers have a same Phisical representation
     * @param layers
     * @return 
     */
    public static GraphDBUnionLayerView createInstance(ERInterfaceLayer... layers) {
        Set<Entity> es = new TreeSet<>();
        Set<Relation> rs = new TreeSet<>();
        ERInterfaceLayer master = null;
        for (ERInterfaceLayer l : layers) {
            if (master==null)
                master = l.getPhisicalMaster();
            es.addAll(l.getEntities());
            rs.addAll(l.getRelations());
        }
        return new GraphDBUnionLayerView(master,rs,es);
    }

    public GraphDBUnionLayerView(ERInterfaceLayer master, Collection<Relation> admitted, Collection<Entity> admittedE) {
        super(master, admitted, admittedE);
    }
    
    @Override
    public ERInterfaceLayer getPhisicalMaster() {
        return super.getPhisicalMaster();
    }
    
}
